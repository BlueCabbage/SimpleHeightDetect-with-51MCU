C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ________
OBJECT MODULE PLACED IN 脉宽测量.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE 脉宽测量.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //////SMC1602A(16*2)模拟口线接线方式
   2          //////连接线图: 
   3          //////       ---------------------------------------------------
   4          //////       |LCM-----51   |  LCM-----51   |  LCM------51      |
   5          //////       --------------------------------------------------|
   6          //////       |DB0-----P1.0 |  DB4-----P1.4 |  RW-------P3.4    |
   7          //////       |DB1-----P1.1 |  DB5-----P1.5 |  RS-------P3.3    |
   8          //////       |DB2-----P1.2 |  DB6-----P1.6 |  E--------P3.5    |
   9          //////       |DB3-----P1.3 |  DB7-----P1.7 |  VLCD接1K电阻到GND|
  10          //////       ---------------------------------------------------
  11          //////接线：模块TRIG接 P2.6  ECH0 接P2.7
  12          
  13          //////////////////////连接线图: 
  14          //////////////////////       ---------------------------------------------------
  15          //////////////////////       |LCM-----51   |  LCM-----51   |  LCM------51      |
  16          //////////////////////       --------------------------------------------------|
  17          //////////////////////       |DB0-----P0.0 |  DB4-----P0.4 |  RW-------P2.6    |
  18          //////////////////////       |DB1-----P0.1 |  DB5-----P0.5 |  RS-------P2.5    |
  19          //////////////////////       |DB2-----P0.2 |  DB6-----P0.6 |  E--------P2.7    |
  20          //////////////////////       |DB3-----P0.3 |  DB7-----P0.7 |                   |
  21          //////////////////////       ---------------------------------------------------
  22          //////////////////////接线：模块TRIG接 P1.1  ECH0 接P1.0
  23          //****************************************
  24          
  25          //////本程序源码只供学习参考，不得应用于商业用途，如有需要请联系作者。
  26          
  27          //////[注:AT89x51使用12M或11.0592M晶振,实测使用11.0592M]
  28          //////=============================================================*/
  29          #include "reg52.h"    //器件配置文件
  30          #include <intrins.h>
  31          sbit  RX = P2^7;
  32          sbit  TX = P2^6;
  33          
  34          sbit LCM_RW = P2^6; //定义LCD引脚
  35          sbit LCM_RS = P2^5;
  36          sbit LCM_E  = P2^7;
  37          #define LCM_Data  P1
  38          
  39          ////#define Key_Data P2_0 //定义Keyboard引脚
  40          ////#define Key_CLK  P3_2
  41          
  42          #define Busy    0x80 //用于检测LCM状态字中的Busy标识
  43          
  44          void LCMInit(void);
  45          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData);
  46          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData);
  47          void Delay5Ms(void);
  48          void Delay400Ms(void);
  49          void Decode(unsigned char ScanCode);
  50          void WriteDataLCM(unsigned char WDLCM);
  51          void WriteCommandLCM(unsigned char WCLCM,BuysC);
  52          
  53          unsigned char ReadDataLCM(void);
  54          unsigned char ReadStatusLCM(void);
  55          unsigned char code mcustudio[] ={"mcustudio.com.cn"};
C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 2   

  56          unsigned char code email[] =    {"fhwxaoo@163.com "};
  57          unsigned char code Cls[] =      {"                "};
  58          unsigned char code ASCII[15] =    {'0','1','2','3','4','5','6','7','8','9','.','-','M'};
  59          
  60          static unsigned char DisNum = 0; //显示用指针         
  61                 unsigned int  time=0;
  62               unsigned long S=0;
  63               bit      flag =0;
  64               unsigned char disbuff[4]    ={ 0,0,0,0,};
  65          
  66          
  67          //写数据
  68          void WriteDataLCM(unsigned char WDLCM) 
  69          {
  70   1        ReadStatusLCM(); //检测忙
  71   1        LCM_Data = WDLCM;
  72   1        LCM_RS = 1;
  73   1        LCM_RW = 0;
  74   1        LCM_E = 0; //若晶振速度太高可以在这后加小的延时
  75   1        LCM_E = 0; //延时
  76   1        LCM_E = 1;
  77   1      }
  78          
  79          //写指令
  80          void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
  81          {
  82   1        if (BuysC) ReadStatusLCM(); //根据需要检测忙
  83   1        LCM_Data = WCLCM;
  84   1        LCM_RS = 0;
  85   1        LCM_RW = 0; 
  86   1        LCM_E = 0;
  87   1        LCM_E = 0;
  88   1        LCM_E = 1;  
  89   1      }
  90          
  91          //读数据
  92          unsigned char ReadDataLCM(void)
  93          {
  94   1        LCM_RS = 1; 
  95   1        LCM_RW = 1;
  96   1        LCM_E = 0;
  97   1        LCM_E = 0;
  98   1        LCM_E = 1;
  99   1        return(LCM_Data);
 100   1      }
 101          
 102          //读状态
 103          unsigned char ReadStatusLCM(void)
 104          {
 105   1        LCM_Data = 0xFF; 
 106   1        LCM_RS = 0;
 107   1        LCM_RW = 1;
 108   1        LCM_E = 0;
 109   1        LCM_E = 0;
 110   1        LCM_E = 1;
 111   1        while (LCM_Data & Busy); //检测忙信号
 112   1        return(LCM_Data);
 113   1      }
 114          
 115          void LCMInit(void) //LCM初始化
 116          {
 117   1        LCM_Data = 0;
C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 3   

 118   1        WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
 119   1        Delay5Ms(); 
 120   1        WriteCommandLCM(0x38,0);
 121   1        Delay5Ms(); 
 122   1        WriteCommandLCM(0x38,0);
 123   1        Delay5Ms(); 
 124   1      
 125   1        WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
 126   1        WriteCommandLCM(0x08,1); //关闭显示
 127   1        WriteCommandLCM(0x01,1); //显示清屏
 128   1        WriteCommandLCM(0x06,1); // 显示光标移动设置
 129   1        WriteCommandLCM(0x0F,1); // 显示开及光标设置
 130   1      }
 131          
 132          //按指定位置显示一个字符
 133          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
 134          {
 135   1        Y &= 0x1;
 136   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 137   1        if (Y) X |= 0x40; //当要显示第二行时地址码+0x40;
 138   1        X |= 0x80; //算出指令码
 139   1        WriteCommandLCM(X, 1); //发命令字
 140   1        WriteDataLCM(DData); //发数据
 141   1      }
 142          
 143          //按指定位置显示一串字符
 144          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData)
 145          {
 146   1        unsigned char ListLength;
 147   1      
 148   1        ListLength = 0;
 149   1        Y &= 0x1;
 150   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 151   1        while (DData[ListLength]>0x19) //若到达字串尾则退出
 152   1          {
 153   2            if (X <= 0xF) //X坐标应小于0xF
 154   2              {
 155   3                DisplayOneChar(X, Y, DData[ListLength]); //显示单个字符
 156   3                ListLength++;
 157   3                X++;
 158   3              }
 159   2          }
 160   1      }
 161          
 162          //5ms延时
 163          void Delay5Ms(void)
 164          {
 165   1        unsigned int TempCyc = 5552;
 166   1        while(TempCyc--);
 167   1      }
 168          
 169          //400ms延时
 170          void Delay400Ms(void)
 171          {
 172   1        unsigned char TempCycA = 5;
 173   1        unsigned int TempCycB;
 174   1        while(TempCycA--)
 175   1          {
 176   2            TempCycB=7269;
 177   2            while(TempCycB--);
 178   2          };
 179   1      }
C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 4   

 180          /********************************************************/
 181              void Conut(void)
 182            {
 183   1         time=TH0*256+TL0;
 184   1         TH0=0;
 185   1         TL0=0;
 186   1        
 187   1         S=(time*1.7)/100;     //算出来是CM
 188   1         if((S>=700)||flag==1) //超出测量范围显示“-”
 189   1         {   
 190   2          flag=0;
 191   2         
 192   2          DisplayOneChar(0, 1, ASCII[11]);
 193   2          DisplayOneChar(1, 1, ASCII[10]);  //显示点
 194   2          DisplayOneChar(2, 1, ASCII[11]);
 195   2          DisplayOneChar(3, 1, ASCII[11]);
 196   2          DisplayOneChar(4, 1, ASCII[12]);  //显示M
 197   2         }
 198   1         else
 199   1         {
 200   2          disbuff[0]=S%1000/100;
 201   2          disbuff[1]=S%1000%100/10;
 202   2          disbuff[2]=S%1000%10 %10;
 203   2          DisplayOneChar(0, 1, ASCII[disbuff[0]]);
 204   2          DisplayOneChar(1, 1, ASCII[10]);  //显示点
 205   2          DisplayOneChar(2, 1, ASCII[disbuff[1]]);
 206   2          DisplayOneChar(3, 1, ASCII[disbuff[2]]);
 207   2          DisplayOneChar(4, 1, ASCII[12]);  //显示M
 208   2         }
 209   1        }
 210          /********************************************************/
 211               void zd0() interrupt 1      //T0中断用来计数器溢出,超过测距范围
 212            {
 213   1          flag=1;              //中断溢出标志
 214   1        }
 215          /********************************************************/
 216               void  StartModule()             //启动模块
 217            {
 218   1          TX=1;                          //启动一次模块
 219   1          _nop_(); 
 220   1          _nop_(); 
 221   1          _nop_(); 
 222   1          _nop_(); 
 223   1          _nop_(); 
 224   1          _nop_(); 
 225   1          _nop_(); 
 226   1          _nop_(); 
 227   1          _nop_(); 
 228   1          _nop_(); 
 229   1          _nop_(); 
 230   1          _nop_(); 
 231   1          _nop_(); 
 232   1          _nop_(); 
 233   1          _nop_(); 
 234   1          _nop_(); 
 235   1          _nop_();
 236   1          _nop_(); 
 237   1          _nop_(); 
 238   1          _nop_(); 
 239   1          _nop_();
 240   1          TX=0;
 241   1        }
C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 5   

 242          /********************************************************/ 
 243          void delayms(unsigned int ms)
 244          {
 245   1        unsigned char i=100,j;
 246   1        for(;ms;ms--)
 247   1        {
 248   2          while(--i)
 249   2          {
 250   3            j=10;
 251   3            while(--j);
 252   3          }
 253   2        }
 254   1      }
 255          /*********************************************************/
 256          void main(void)
 257          {
 258   1        unsigned char TempCyc;
 259   1        Delay400Ms(); //启动等待，等LCM讲入工作状态
 260   1        LCMInit(); //LCM初始化
 261   1        Delay5Ms(); //延时片刻(可不要)
 262   1        DisplayListChar(0, 0, mcustudio);
 263   1        DisplayListChar(0, 1, email);
 264   1        ReadDataLCM();//测试用句无意义
 265   1        for (TempCyc=0; TempCyc<10; TempCyc++)
 266   1        Delay400Ms(); //延时
 267   1        DisplayListChar(0, 1, Cls); 
 268   1        while(1)
 269   1        {
 270   2         TMOD=0x01;      //设T0为方式1，GATE=1；
 271   2         TH0=0;
 272   2         TL0=0;          
 273   2         ET0=1;             //允许T0中断
 274   2         EA=1;         //开启总中断     
 275   2        
 276   2        while(1)
 277   2          {
 278   3             StartModule();
 279   3          // DisplayOneChar(0, 1, ASCII[0]);
 280   3             while(!RX);    //当RX为零时等待
 281   3             TR0=1;         //开启计数
 282   3             while(RX);     //当RX为1计数并等待
 283   3             TR0=0;       //关闭计数
 284   3               Conut();     //计算
 285   3           delayms(80);   //80MS
 286   3           
 287   3          }
 288   2        }
 289   1      }
 290          
 291          
 292          
 293                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    757    ----
   CONSTANT SIZE    =     66    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.52.0.0   ________                                                          08/15/2015 05:41:48 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
